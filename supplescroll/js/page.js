// Generated by CoffeeScript 1.6.3
(function() {
  var figlist, figlist_href, get_bottom, get_content_height, get_content_width, get_left, get_n_column, get_outer_height, get_outer_width, get_right, get_spacing_width, get_top, get_trigger_toc_width, init, is_active_trigger_toc, max_youtube_video_width, navbar, navbar_href, one_columnn_width, resize_img_dom, resize_window, set_left, set_outer_height, set_outer_width, set_top, text, text_href, toc, toc_href, toggle_trigger, trigger, trigger_href, trigger_toc, two_column_width, youtube_video_ratio;

  text_href = '#main-text';

  toc_href = '#table-of-contents';

  figlist_href = '#figure-list';

  trigger_href = '#toc-trigger';

  navbar_href = '#navbar';

  two_column_width = 1200;

  one_columnn_width = 480;

  max_youtube_video_width = 500;

  youtube_video_ratio = 9 / 16;

  text = null;

  toc = null;

  figlist = null;

  trigger = null;

  navbar = null;

  set_outer_height = function(div, height) {
    var margin;
    margin = div.outerHeight(true) - div.innerHeight();
    margin += parseInt(div.css('padding-top'));
    margin += parseInt(div.css('padding-bottom'));
    return div.height(height - margin);
  };

  set_outer_width = function(div, width) {
    var margin;
    margin = div.outerWidth(true) - div.innerWidth();
    margin += parseInt(div.css('padding-left'));
    margin += parseInt(div.css('padding-right'));
    return div.width(width - margin);
  };

  get_outer_width = function(div) {
    return div.outerWidth(true);
  };

  get_spacing_width = function(div) {
    return get_outer_width(div) - get_content_width(div);
  };

  get_outer_height = function(div) {
    return div.outerHeight(true);
  };

  get_content_width = function(div) {
    var width;
    width = div.innerWidth();
    width -= parseInt(div.css('padding-left'));
    width -= parseInt(div.css('padding-right'));
    return width;
  };

  get_content_height = function(div) {
    var height;
    height = div.innerHeight();
    height -= parseInt(div.css('padding-top'));
    height -= parseInt(div.css('padding-bottom'));
    return height;
  };

  get_bottom = function(div) {
    return div.position().top + div.outerHeight(true);
  };

  get_right = function(div) {
    return div.position().left + div.outerWidth(true);
  };

  get_top = function(div) {
    return div.position().top;
  };

  get_left = function(div) {
    return div.position().left;
  };

  set_top = function(div, top) {
    return div.css('top', top);
  };

  set_left = function(div, left) {
    return div.css('left', left);
  };

  resize_img_dom = function(img_dom, width) {
    var img_elem;
    img_elem = $(img_dom);
    if (img_elem.hasClass('inline-graphic')) {
      return;
    }
    if (img_dom.naturalWidth > 0 && img_dom.naturalWidth < width) {
      return img_elem.css('width', '');
    } else {
      return img_elem.css('width', '100%');
    }
  };

  get_n_column = function() {
    var window_width;
    window_width = $(window).width();
    if (window_width <= one_columnn_width) {
      return 1;
    }
    if (window_width <= two_column_width) {
      return 2;
    }
    return 3;
  };

  is_active_trigger_toc = function() {
    return trigger.hasClass('active');
  };

  toggle_trigger = function() {
    if (is_active_trigger_toc()) {
      return trigger.removeClass('active');
    } else {
      return trigger.addClass('active');
    }
  };

  get_trigger_toc_width = function() {
    var trigger_width, window_width;
    window_width = $(window).width();
    trigger_width = parseInt(1.5 * get_outer_width(trigger));
    if (get_n_column() === 2) {
      return Math.round(window_width / 2) - trigger_width;
    } else if (get_n_column() === 1) {
      return window_width - trigger_width;
    }
  };

  resize_window = function() {
    var body, body_padding_left, body_padding_right, div, figlist_width, half_window_width, height, img_dom, img_elem, left, make_resize_fn, navbar_height, parent_width, resize_fn, width, window_height, window_width, _i, _j, _len, _len1, _ref, _ref1, _results;
    window_width = $(window).width();
    window_height = $(window).height();
    body = $(document.body);
    body_padding_left = parseInt(body.css('padding-left'));
    body_padding_right = parseInt(body.css('padding-right'));
    navbar_height = get_outer_height(navbar);
    if (is_active_trigger_toc()) {
      toggle_trigger();
    }
    if (get_n_column() === 3) {
      set_left(navbar, body_padding_left);
      set_outer_width(navbar, window_width - body_padding_left - body_padding_right);
    } else {
      set_left(navbar, 0);
      set_outer_width(navbar, window_width);
    }
    if (get_n_column() < 3) {
      trigger.show();
    } else {
      trigger.hide();
    }
    height = window_height - navbar_height;
    _ref = [toc, figlist, text];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      div = _ref[_i];
      set_top(div, navbar_height);
      set_outer_height(div, height);
    }
    if (get_n_column() < 3) {
      set_top(toc, 0);
      set_outer_height(toc, window_height);
      width = get_trigger_toc_width();
      set_left(toc, -width);
      set_outer_width(toc, width);
    } else if (get_n_column() === 3) {
      toc.width('');
      set_left(toc, body_padding_left);
    }
    if (get_n_column() === 1) {
      figlist.hide();
      set_left(text, 0);
      set_outer_width(text, window_width);
    } else if (get_n_column() === 2) {
      figlist.show();
      half_window_width = Math.round(window_width / 2);
      set_left(text, 0);
      set_outer_width(text, half_window_width);
      figlist_width = window_width - half_window_width;
      set_left(figlist, half_window_width);
      set_outer_width(figlist, figlist_width);
    } else {
      figlist.show();
      text.width('');
      left = get_right(toc);
      set_left(text, left);
      left = get_right(text);
      set_left(figlist, left);
      figlist_width = window_width - body_padding_left - body_padding_right - get_outer_width(toc) - get_outer_width(text);
      set_outer_width(figlist, figlist_width);
    }
    if (get_n_column() === 1) {
      return $('.fig-in-text iframe[src*="youtube.com"]').each(function() {
        var iframe, parent_width;
        iframe = $(this);
        parent_width = iframe.parent().width();
        iframe.width(parent_width);
        height = parent_width * youtube_video_ratio;
        return iframe.height(height);
      });
    } else {
      $('.fig-in-figlist iframe[src*="youtube.com"]').each(function() {
        var iframe, parent_width;
        iframe = $(this);
        parent_width = iframe.parent().width();
        if (parent_width < max_youtube_video_width) {
          iframe.css('width', '100%');
          height = parent_width * youtube_video_ratio;
        } else {
          iframe.css('width', max_youtube_video_width + 'px');
          height = max_youtube_video_width * youtube_video_ratio;
        }
        return iframe.css('height', height + 'px');
      });
      _ref1 = $('img');
      _results = [];
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        img_dom = _ref1[_j];
        img_elem = $(img_dom);
        parent_width = figlist_width - get_spacing_width(img_elem.parent());
        make_resize_fn = function(img_dom, parent_width) {
          return function() {
            return resize_img_dom(img_dom, parent_width);
          };
        };
        resize_fn = make_resize_fn(img_dom, parent_width);
        if (init === true) {
          _results.push(img_elem.load(resize_fn));
        } else {
          _results.push(resize_fn(img_dom, parent_width));
        }
      }
      return _results;
    }
  };

  trigger_toc = function() {
    var div, move_css, width, _i, _len, _ref, _results;
    toggle_trigger();
    if (get_n_column() < 3) {
      width = get_trigger_toc_width();
      if (is_active_trigger_toc()) {
        move_css = {
          left: "+=" + width
        };
      } else {
        move_css = {
          left: "-=" + width
        };
      }
      _ref = [toc, text, navbar, figlist];
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        div = _ref[_i];
        _results.push(div.animate(move_css, 300));
      }
      return _results;
    }
  };

  init = function() {
    text = $(text_href);
    toc = $(toc_href);
    figlist = $(figlist_href);
    trigger = $(trigger_href);
    navbar = $(navbar_href);
    trigger.click(trigger_toc);
    trigger.css('z-index', 1000);
    toc.css('z-index', 700);
    text.css('z-index', 500);
    figlist.css('z-index', 0);
    supplescroll.init_touchscroll();
    supplescroll.build_page(toc_href, text_href, figlist_href);
    $(window).resize(resize_window);
    return resize_window();
  };

  $(window).ready(init);

}).call(this);
